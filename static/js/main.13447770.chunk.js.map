{"version":3,"sources":["store/employeesSlice.js","store/birthdaySlice.js","components/UserCard/UserCard.js","utils/getAlphabet.js","utils/nameOfMonth.js","utils/parseOfDate.js","pages/EmployeesPage/EmployeesPage.js","utils/setMonthList.js","utils/birthdayListByMonth.js","utils/employeesByAlphabet.js","pages/HomePage/HomePage.js","pages/NotFoundPage/NotFoundPage.js","store/store.js","App.js","reportWebVitals.js","index.js"],"names":["getEmployees","createAsyncThunk","a","axios","get","response","status","data","Error","employeesAdapter","createEntityAdapter","sortComparer","b","lastName","getSelectors","state","employees","selectEmployees","selectAll","getEmployeesSlice","selectById","createSlice","name","initialState","getInitialState","reducers","extraReducers","fulfilled","setAll","birthdayAdapter","birthday","selectBirthdays","selectIds","stateFromStorage","entities","ids","i","sessionStorage","length","key","JSON","parse","getItem","push","birthdaySlice","addBirthday","reducer","action","addOne","payload","setItem","id","stringify","removeBirthday","removeOne","removeItem","actions","addToStorage","UserCard","employee","dispatch","useDispatch","isChecked","useSelector","includes","className","firstName","type","value","defaultChecked","onChange","alphabet","arr","String","fromCodePoint","getAlphabet","nameOfMonth","parseOfDate","date","_date","Date","day","getDate","month","getMonth","year","getFullYear","monthList","tempArr","setMonthList","EmployeesPage","birthdays","birthdaysList","list","keys","dob","birthdayListByMonth","employeesWithLetter","employeesArray","_arr","employeesByAlphabet","memoizedEmployeesList","useMemo","map","letter","employeeData","shortid","generate","useEffect","Object","HomePage","to","NotFoundPage","configureStore","employeesReducer","birthdayReducer","App","store","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13447770.chunk.js","sourcesContent":["import {\r\n    createEntityAdapter,\r\n    createSlice,\r\n    createAsyncThunk,\r\n} from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const getEmployees = createAsyncThunk(\r\n    \"employees/getEmployees\",\r\n    async () => {\r\n        const response = await axios.get(\r\n            \"https://yalantis-react-school-api.yalantis.com/api/task0/users\"\r\n        );\r\n        if (response.status === 200) {\r\n            return response.data;\r\n        }\r\n        return new Error(\"Error\");\r\n    }\r\n);\r\n\r\nconst employeesAdapter = createEntityAdapter({\r\n    sortComparer: (a, b) => (a.lastName > b.lastName ? 1 : -1),\r\n});\r\n\r\nexport const { selectAll: selectEmployees, selectById: selectEmployeeById } =\r\n    employeesAdapter.getSelectors((state) => state.employees);\r\n\r\nconst getEmployeesSlice = createSlice({\r\n    name: \"employees\",\r\n    initialState: employeesAdapter.getInitialState(),\r\n    reducers: {},\r\n    extraReducers: {\r\n        [getEmployees.fulfilled]: employeesAdapter.setAll,\r\n    },\r\n});\r\n\r\nexport default getEmployeesSlice.reducer;\r\n","import { createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst birthdayAdapter = createEntityAdapter({\r\n    sortComparer: (a, b) => (a.lastName > b.lastName ? 1 : -1),\r\n});\r\n\r\nexport const {\r\n    selectAll: selectBirthdays,\r\n    selectById: selectBirthdaysById,\r\n    selectIds,\r\n} = birthdayAdapter.getSelectors((state) => state.birthday);\r\n\r\nconst stateFromStorage = () => {\r\n    let entities = {};\r\n    const ids = [];\r\n    for (let i = 0; i < sessionStorage.length; i++) {\r\n        let key = sessionStorage.key(i);\r\n        entities[key] = JSON.parse(sessionStorage.getItem(key));\r\n        ids.push(key);\r\n    }\r\n    return { entities, ids };\r\n};\r\n\r\nconst birthdaySlice = createSlice({\r\n    name: \"birthday\",\r\n    initialState: birthdayAdapter.getInitialState({\r\n        ids: stateFromStorage().ids,\r\n        entities: stateFromStorage().entities,\r\n    }),\r\n    reducers: {\r\n        addBirthday: {\r\n            reducer: (state, action) => {\r\n                birthdayAdapter.addOne(state, action.payload);\r\n                sessionStorage.setItem(\r\n                    action.payload.id,\r\n                    JSON.stringify(action.payload)\r\n                );\r\n            },\r\n        },\r\n        removeBirthday: {\r\n            reducer: (state, action) => {\r\n                birthdayAdapter.removeOne(state, action.payload);\r\n                sessionStorage.removeItem(action.payload);\r\n            },\r\n        },\r\n        \r\n    },\r\n    extraReducers: {},\r\n});\r\n\r\nexport const { addBirthday, removeBirthday, addToStorage } = birthdaySlice.actions;\r\n\r\nexport default birthdaySlice.reducer;\r\n","import PT from \"prop-types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport \"./style.scss\";\r\n\r\nimport { addBirthday, removeBirthday, selectIds } from \"../../store/birthdaySlice\";\r\n\r\nexport const UserCard = ({ employee }) => {\r\n    const dispatch = useDispatch();\r\n    const Ids = useSelector(selectIds);\r\n\r\n    const handleSetDB = () => {\r\n        dispatch(addBirthday(employee));\r\n    };\r\n\r\n    const handleDelDB = () => {\r\n        dispatch(removeBirthday(employee.id));\r\n    };\r\n\r\n    const isChecked = (Ids.includes(employee.id));\r\n\r\n    return (\r\n        <div className={`user-card ${isChecked ? \"active\" : \"\"}`}>\r\n            <h4 className={`user-card__name ${isChecked ? \"active\" : \"\"}`}>\r\n                {`${employee.firstName} ${employee.lastName}`}\r\n            </h4>\r\n            <input\r\n                type=\"radio\"\r\n                name={employee.id}\r\n                value=\"false\"\r\n                defaultChecked={!isChecked}\r\n                onChange={handleDelDB}\r\n            />\r\n            not active\r\n            <br />\r\n            <input\r\n                type=\"radio\"\r\n                name={employee.id}\r\n                value=\"true\"\r\n                onChange={handleSetDB}\r\n                defaultChecked={isChecked}\r\n            />\r\n            active\r\n        </div>\r\n    );\r\n};\r\n\r\nUserCard.propTypes = {\r\n    employee: PT.shape({\r\n        id: PT.string.isRequired,\r\n        firstName: PT.string.isRequired,\r\n        lastName: PT.string.isRequired,\r\n        dob: PT.string.isRequired,\r\n    }).isRequired,\r\n};\r\n","const getAlphabet = () => {\r\n    const arr = [];\r\n    for (let i = 65; i <= 89; i++) {\r\n        arr.push(String.fromCodePoint(i));\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport const alphabet = getAlphabet();","export const nameOfMonth = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n];","import { nameOfMonth } from './nameOfMonth'\r\nexport const parseOfDate = (date) => {\r\n    const _date = new Date(date);\r\n    _date.day = _date.getDate();\r\n    _date.month = nameOfMonth[_date.getMonth() + 1];\r\n    _date.year = _date.getFullYear();\r\n    return _date;\r\n};","import { useEffect, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport shortid from 'shortid';\r\n\r\nimport { getEmployees, selectEmployees } from \"../../store/employeesSlice\";\r\nimport { selectBirthdays } from \"../../store/birthdaySlice\";\r\n\r\nimport { UserCard } from \"../../components\";\r\n\r\nimport { alphabet, setMonthList, birthdayListByMonth, parseOfDate, employeesByAlphabet } from \"../../utils\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst dayOfBirthday = (date) =>\r\n\t`${parseOfDate(date).day} ${parseOfDate(date).month}, ${parseOfDate(date).year\r\n\t} year`;\r\n\r\nconst monthList = setMonthList(11);\r\n\r\nexport const EmployeesPage = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst birthdays = useSelector(selectBirthdays);\r\n\tconst employees = useSelector(selectEmployees);\r\n\tconst birthdaysList = birthdayListByMonth(birthdays);\r\n\r\n\tconst employeesWithLetter = employeesByAlphabet(employees);\r\n\r\n\tconst memoizedEmployeesList = useMemo(() => (\r\n\t\t<div className=\"employees-list\">\r\n\t\t\t{alphabet.map(letter => (\r\n\t\t\t\temployeesWithLetter[letter]\r\n\t\t\t\t\t? (\r\n\t\t\t\t\t\t<div className=\"letter-card\" key={shortid.generate()}>\r\n\t\t\t\t\t\t\t<h3>{letter}</h3>\r\n\t\t\t\t\t\t\t{employeesWithLetter[letter].map(employeeData => (\r\n\t\t\t\t\t\t\t\t<UserCard key={shortid.generate()} employee={employeeData} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<div className=\"letter-card\" key={shortid.generate()}>\r\n\t\t\t\t\t\t\t<h3>{letter}</h3>\r\n\t\t\t\t\t\t\t<div className=\"empty-card\">\r\n\t\t\t\t\t\t\t\t<h4>No Employees</h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t))}\r\n\t\t</div>\r\n\t), [employees]);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getEmployees());\r\n\t}, [dispatch]);\r\n\r\n\tif (!employees.length) {\r\n\t\treturn null\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"content\">\r\n\t\t\t<div className=\"user-list\">\r\n\t\t\t\t<h2>Employees</h2>\r\n\t\t\t\t{memoizedEmployeesList}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"birthday-list\">\r\n\t\t\t\t<h2 className=\"employees-birthday\">Employees birthday</h2>\r\n\t\t\t\t<hr />\r\n\t\t\t\t{Object.keys(birthdaysList).length ?\r\n\t\t\t\t\tmonthList.map((month) => (\r\n\t\t\t\t\t\t<div key={shortid.generate()}>\r\n\t\t\t\t\t\t\t<h5>{month}</h5>\r\n\t\t\t\t\t\t\t{birthdaysList[month]?.length ?\r\n\t\t\t\t\t\t\t\tbirthdaysList[month].map(\r\n\t\t\t\t\t\t\t\t\temployee => <li key={shortid.generate()}>\r\n\t\t\t\t\t\t\t\t\t\t{`${employee.lastName} ${employee.firstName} - ${dayOfBirthday(employee.dob)}`}\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t<p>No Employees</p>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<div>Employees List is empty</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n","import { nameOfMonth } from './nameOfMonth';\r\n\r\nexport const setMonthList = (getMonth = 1) => {\r\n    const tempArr = [];\r\n    for (let i = getMonth - 1; i < 12; i++) {\r\n      tempArr.push(nameOfMonth[i]);\r\n    }\r\n    for (let i = 0; i < getMonth - 1; i++) {\r\n      tempArr.push(nameOfMonth[i]);\r\n    }\r\n    return tempArr;\r\n  };\r\n","import { parseOfDate } from './parseOfDate';\r\n\r\nexport const birthdayListByMonth = (list=[]) => {\r\n    const tempArr = [];\r\n    for (let i = 0; i < list.length; i++) {\r\n        let keys = parseOfDate(list[i].dob).month;\r\n        if (!tempArr[keys]) {\r\n            tempArr[keys] = [];\r\n        }\r\n        tempArr[keys].push(list[i]);\r\n    }\r\n    return tempArr;\r\n}","export const employeesByAlphabet = (employeesArray = []) => {\r\n\tlet _arr = [];\r\n\tfor (let employees of employeesArray) {\r\n\t\tlet keys = employees.firstName[0];\r\n\t\tif (!_arr[keys]) {\r\n\t\t\t_arr[keys] = [];\r\n\t\t}\r\n\t\t_arr[keys].push(employees);\r\n\t}\r\n\treturn _arr;\r\n};","import { Link } from 'react-router-dom';\r\n\r\nexport const HomePage = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p>HomePage</p>\r\n\t\t\t<Link to=\"/employees\">Employees Page</Link>\r\n\t\t</div>\r\n\t)\r\n}","import {Link} from 'react-router-dom'\r\n\r\nexport const NotFoundPage = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p>NotFoundPage</p>\r\n\t\t\t<Link to=\"/employees\">Test task click here</Link>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport employeesReducer from './employeesSlice'\r\nimport birthdayReducer from \"./birthdaySlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    employees: employeesReducer,\r\n    birthday: birthdayReducer,\r\n  },\r\n});\r\n","import { Routes, Route, BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport { EmployeesPage, NotFoundPage, HomePage } from './pages';\r\nimport store from './store/store';\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/\" element={<HomePage />} />\r\n          <Route path=\"/employees\" element={<EmployeesPage />} />\r\n          <Route path=\"*\" element={<NotFoundPage />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}